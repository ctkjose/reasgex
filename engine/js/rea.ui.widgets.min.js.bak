/** @module reasg/js/jquery extensions */

//JQUERY Extensions
jQuery.elm = function(e){
	
	var o = $( "[id=" + e +"]" );
	if (o.length) return o;
	
	o = $( "[name='" + e +"']" );
	if (o.length) return o;
	
	o = $( "[name^='" + e +"_']" );
	if (o.length) return o;
	
	return null;
}
jQuery.fn.elmForm = function(){
	return this.parents('form:first');
}
jQuery.fn.elmName = function(){
	var n = this.attr("name");
	if ((typeof n === typeof undefined) || (n === false)) {
		n = this.attr("id");
	}
	return n;
}
jQuery.fn.elmType = function(){
	if (this.attr("data-type")) return this.data("type").toLowerCase();
	if (this.attr("type")) return this.attr("type").toLowerCase();
	return this[0].tagName.toLowerCase();
};
jQuery.fn.elmTag = function(){
	return this.prop("tagName").toLowerCase();
};
jQuery.fn.elmKey = function(attr, val) {
	if(val){
		return this.attr('data-' + attr, val);
	}else{
		return this.attr('data-' + attr);
	}
	
};
jQuery.fn.elmHasKey = function(n){
	//return (typeof this.data(n) == "undefined") ? false : true;
	return (typeof this.attr('data-' + n) == "undefined") ? false : true;
};
jQuery.fn.elmHasOptions = function(){
	var t = this.elmType();
	if ( (t == "select") || (t == "checkbox") || (t == "radio") || (t == "check_yesno" ) || (t == "check_bool" )) {
		return true;
	}
	return false;
};
jQuery.fn.elmOptionsGet = function(){
	if(!this.elmHasOptions() ) return [];
	
	var t = this.elmType();
	var n = this.elmName();
	var a = [];
	
	if ( t == "select" ){
		var selected =this.o.find('option');
	}else{	
		var selected = $("input[name='" + n + "']"); //fix this, n could be an id
	}
	
	selected.each( function() {
		var ck = $(this);
		a.push(ck);
	});
	
	return a;
};


//Plugins for UI interactions

//A basic Popover/Modal Plugin
jQuery.fn.ui_popup = function(options){
	var e = this;	
	
	if (typeof options == "string"){
		var ops = e.data("popup-options");
		if(options == "close"){
			var mb = $("#modal-background");
			if(mb.length > 0) mb.removeClass("active");
			e.removeClass("in");
			e.hide();
		}
		
		return;
	}
	var ops = $.extend({
		'title' : null,
		'content' : '',
		'template' : '',
		'target' : null,
		'center' : false,
		'cssclass' : 'dialog',
		'modal': false,
	}, options );
	
	if(ops.modal){
		var mb = $("#modal-background");
		if(mb.length == 0){
			mb = $('<div id="modal-background"></div>');
			$('body').prepend(mb);
		}
		mb.addClass("active");
	}
	
	e.data("popup-options", ops);
	if( e.hasClass("in") ){
		e.removeClass("in");
		e.hide();
		return;
	}
	
	e.css("position","absolute");
	e.show();
	e.addClass("in").addClass(ops.cssclass);
	
	var h = e.outerHeight();
	var w = e.outerWidth();
	
	var $w = $(window);
	var fc = (ops.center || ($w.width() < 768)) ? true : false; //force center
	
	if(fc || !ops.target){
		var p  = {'top': 0, 'left': 0 };
		p.top = Math.max(0, (($w.height() - h) / 2) + $w.scrollTop());
		p.left = Math.max(0, (($w.width() - w) / 2) + $w.scrollLeft())
		
		e.animate({top: p.top + 'px', left: p.left + 'px'}, 0);
	}else{
		var p = ops.target.offset();
		e.animate({top: (p.top + ops.target.outerHeight())+ 'px', left: p.left + 'px'}, 0);
	}
}

jQuery.fn.ui_screenCenter = function() {
		var e = this;
		
		var $window = $(window);
		var $document = $(document);
		var winWidth = $window.width();
		var winHeight = $window.height();
		var scrollLeft = $document.scrollLeft();
		var scrollTop = $document.scrollTop();
		var boxWidth = e.outerWidth(true);
		var boxHeight = e.outerHeight(true);		

		e.css ({ left: (winWidth-boxWidth)/2+scrollLeft, top: (winHeight-boxHeight)/2+scrollTop });
}/*
 *    REASG Toolkit
 *    Jose L Cuevas
 *
 */

function rea_tokenizer() {
	
	this.kToken_Operators = "=:!><().,+-/\^*&%{}[];";
	
	//Token types
	this.kTokenType_EOF = 255;
	this.kTokenType_Selector = 9;
	this.kTokenType_String = 1;
	this.kTokenType_Operator = 2;
	this.kTokenType_Comment = 3;
	this.kTokenType_Number = 4;
	this.kTokenType_Identifier = 5;
	this.kTokenType_Keyword = 6;
	this.kTokenType_Function = 6;

	this.source='';
	this.done = false;
	this.keywords = ['-----'];
	this.saved_token = null;
	this.last_token = null;
	this.initialize = function(src){
		this.source = src;
		this.last_token = null;
		this.saved_token = null;
		this.done = false;
	}
	this.isWhite = function(c){
		if((c == "\n") || (c == "\r") || (c == "\t") || (c == ' ')) return true;
		return false;
	}
	this.getCh = function(p){
		if ( (p + 1) > this.source.length) {
			return '';
		}
		return this.source.substring(p, p+1);
	}
	this.isKeyword = function(k){
		if (this.keywords.indexOf(k.toLowerCase()) >= 0) return true;
		return false;
	}
	this.syntaxError = function(m){
		console.log(m)
	}
	this.needToken = function (tok){
		var tk = this.nextToken();
		if(tk.type == this.kTokenType_EOF) return false;
		
		if(tk.value != tok){
			this.putTokenBack();
			this.syntaxError("Expecting token \"" + tok + "\" but found \"" + tk.value + "\".");
			return false;
		}
		
		return true;
	}
	
	this.ifOperator = function (op){
		var tk = this.nextToken();
		if(tk.type == this.kTokenType_EOF) return false;
		
		if(tk.type != this.kTokenType_Operator){
			this.putTokenBack();
			return false;
		}
		if(tk.value != op){
			this.putTokenBack();
			return false;
		}
		
		return true;
		
	}
	this.putTokenBack = function(){
		if(this.last_token == null) return;
		this.saved_token = {type : this.last_token.type, value : this.last_token.value};
	}
	this.pokeToken = function(){
		var tk = this.nextToken();
		this.putTokenBack();
		
		return tk;
	}
	this.skipNextToken = function (){
		var tk = this.nextToken();
	}
	this.nextToken = function(){
		this.last_token = {type : this.kTokenType_EOF, value : ''};
		var tk = {type : this.kTokenType_EOF, value : ''};
		
		if(this.saved_token != null){
			tk.type = this.saved_token.type;
			tk.value = this.saved_token.value;
			this.saved_token = null;
			this.last_token = {type : tk.type, value : tk.value};
			return tk;
		}
		
		var c = ''; var b = ''; var p = -1;
		var sl = this.source.length - 1;
		
		if(sl < 0){
			return tk;
		}

		do{
			p++;
			c = this.getCh(p);
			
		}while(this.isWhite(c) && (p <= sl));
		
		if(p > sl){
			this.done = true;
			this.source = "";
			return tk;
		}

		if( (c == "\"") || (c == "'") ){
			var sd = (c == "\"") ? "\"" : "'";
			tk.type = this.kTokenType_String;
			do{
				p++;
				c = this.getCh(p);
				b += c;
			}while((c != sd)  && (p <= sl));
			
			this.source = this.source.substring(p+1);
			tk.value = b.substring(0, b.length-1);
		}else if(c == "@"){ //comment
			tk.type = this.kTokenType_Comment;
			do{
				p++;
				c = this.source.substring(p,p+1);
			}while( ((c != "\n") && (c != "\r")) && (p <= sl) );
			
			//print "End Comment, source[{$p}] = $c<br>";
			tk.value = '';
			this.source = this.source.substring(p+1);
			//alert("tk comment[type]=[" + tk.type + "][" + tk.value + "]");
		}else if( "-0123456789".indexOf(c) > -1  ) {
			
			if ( (c == '-') && ( "0123456789.".indexOf(this.source.substring(p+1,p+2)) == -1  ) ){
				tk.value = c;
				tk.type = this.kTokenType_Operator;
				this.source = this.source.substring(p+1);
				//alert("tk op[type]=[" + tk.type + "][" + tk.value + "]");
				
			}else{
				b = '';
				while( "-0123456789.".indexOf(c) > -1 ){
					b += c;
					p++;
					if(p > sl) break;
					c = this.getCh(p);
				}
	
				tk.type = this.kTokenType_Number;
				tk.value = b * 1;
				this.source = this.source.substring(p);
				//alert("tk number[type]=[" + tk.type + "][" + tk.value + "]");
			}
			
		}else if( this.kToken_Operators.indexOf(c) > -1 ){
			tk.type = this.kTokenType_Operator;
			var cn = this.source.substring(p+1,p+2);
			if(c == '<'){
				if(cn == '>'){
					c = '!=';
					p++;
				}else if(cn == '='){
					c = '<=';
					p++;
				}
			}else if( c == '>'){
				if(cn == '='){
					c = '>=';
					p++;
				}
			}else if(c == '!'){
				if(cn == '='){
					c = '!=';
					p++;
				}
			}else if(c == '='){
				if(cn == '='){
					c = '==';
					p++;
				}
			}else if(c == '&'){
				if(cn == '&'){
					c = '&&';
					p++;
				}
			}else if(c == '|'){
				if(cn == '|'){
					c = '||';
					p++;
				}
			}
			
			tk.value = c;
			this.source = this.source.substring(p+1);
		}else if ((c == "$")||(c == "#")) {
			tk.value = c;
			c = '';
			b = '';
			do{
				b += c; p++;
				if(p > sl) break;
				c = this.getCh(p);
			}while((c == ':') || (!this.isWhite(c) && !(this.kToken_Operators.indexOf(c) > -1) && !(c==' ')) );
			
			tk.type = (tk.value=="#") ? this.kTokenType_Selector : this.kTokenType_Selector;
			tk.value = b;
			if((b.length == 0) && (c=="(")) {
				tk.type = this.kTokenType_Identifier;
				tk.value = "$";
			}
			
			this.source = this.source.substring(p);
		}else{
			b = '';
			while(!this.isWhite(c) && !(this.kToken_Operators.indexOf(c) > -1) && !(c==' ')){
				b += c;p++;
				if(p > sl) break;
				c = this.getCh(p);
			}
			
			this.source = this.source.substring(p);
			
			if(this.isKeyword(b)){
				tk.type = this.kTokenType_Keyword;
				tk.value = b.toLowerCase();
			}else if(b.toLowerCase() == 'true'){
				tk.type = this.kTokenType_Number;
				tk.value = '1';
			}else if(b.toLowerCase() == 'false'){
				tk.type = this.kTokenType_Number;
				tk.value = '0';
			}else if(!isNaN(b)){
				tk.type = this.kTokenType_Number;
				tk.value = b * 1;
			}else{
				tk.type = this.kTokenType_Identifier;
				tk.value = b;
			}
			
			//alert("tk[type]=[" + tk.type + "][" + tk.value + "]");
		}
		this.last_token = {type : tk.type, value : tk.value};
		return tk;
	}
	return this;
}

/** @module reasg/js/data_types_extensions */

if(typeof rea == undefined){
	rea = {"types": {}};
}

rea.types.date = {};

rea.types.date.create = function(any){
	
	var o = {};
	if (typeof any == 'string') {
		o = rea.types.date.dateFromString(any);
	}else if(any){
		o = rea.types.date.dateFromTarget(any);
	}else{
		o  = new Date();
	}
	
	o.today = new Date();
	
	o.toString = function(){
		return rea.types.date.dateToString(this);
	}
	o.toHumanString = function(){
		return rea.types.date.dateToHumanString(this);
	}
	o.toMYSQLDate = function(){
		return rea.types.date.dateToMYSQLDate(this);
	}
	o.toMYSQLDateTime = function(){
		return rea.types.date.dateToMYSQLDateTime(this);
	}
	o.epoch = function(){
		return Math.round(this.getTime()/1000.0);
	}
	
	return o;

}
rea.types.date.stringIsISO8601 = function(value){
	var r = /[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}\:[0-9]{2}/;
	return (r.test(value));
}
rea.types.date.stringIsMysqlDateTime = function(value){
	var r = /[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}\:[0-9]{2}\:[0-9]{2}/;
	return (r.test(value));
}

rea.types.date.dateToMYSQLDate = function(d){
	return d.getFullYear() + '-' +
    (d.getMonth() < 9 ? '0' : '') + (d.getMonth()+1) + '-' +
    (d.getDate() < 10 ? '0' : '') + d.getDate();
}
rea.types.date.dateToMYSQLDateTime = function(d){
	return rea.types.date.dateToMYSQLDate(d) + ' ' + (d.getHours() < 10 ? '0' : '') + d.getHours() + ':' + (d.getMinutes() < 10 ? '0' : '') + d.getMinutes() + ':' +  + (d.getSeconds() < 10 ? '0' : '') + d.getSeconds();
}
rea.types.date.dateToString = function(d){
	return d.getFullYear() + '/' + (d.getMonth()+1) + '/' + d.getDate();
}
rea.types.date.dateToHumanString = function(d){
	return (d.getMonth()+1) + '/' + d.getDate() + "/" + d.getFullYear();
}
rea.types.date.dateFromTarget = function(t){
	if ((typeof(t.data('date')) !== 'undefined') ) {
		return rea.types.date.dateFromString( t.data('date') );
	}else if( t.elmType() == "text" ){
		return rea.types.date.dateFromString( "" + t.val() );
	}else{
		return rea.types.date.dateFromString( 'M/D/YYYY' );
	}
}
rea.types.date.dateFromString = function(s){
	var v = ("" + s).toUpperCase();
	var d = new Date();
	
	var m = null;
	if( rea.types.date.stringIsISO8601(v) ){
		d = new Date(value);
		
	}else if( rea.types.date.stringIsMysqlDateTime(v) ){
		var ps = v.split(' ');
		var dp = ps[0].split('-');
		var tp = ps[1].split(':');
		d = new Date( dp[0], dp[1]-1, dp[2], tp[0], tp[1], tp[2]);
		
	}else if( (m = /([0-9]{1,2})\/([0-9]{1,2})\/([0-9]{4})/.exec(v)) ){
		d = new Date(m[3], m[1]-1, m[2]);
		
	}	
	
	
	
	
	d.as_string = (d.getMonth()+1) + '/' + d.getDate() + "/" + d.getFullYear();
	d.m = d.getMonth();
	d.month = d.getMonth() + 1;
	d.year = d.getFullYear();
	d.day = d.getDate();
	d.dow = d.getDay();
	
	d.asMYSQLDate = rea.types.date.dateToMYSQLDate(d);
	d.asMYSQLDateTime = rea.types.date.dateToMYSQLDateTime(d);
	
	var cm = new Date(d.year, d.m, 1);
	d.fow = cm.getDay();
	
	d.next_month = (d.m == 11) ? new Date(d.year+1, 0, 1) : new Date(d.year, d.month, 1);
	d.prev_month = (d.m == 0) ? new Date(d.year-1, 11, 1) : new Date(d.year, d.m-1, 1);
	
	var daysinmonth= new Array(0,31,28,31,30,31,30,31,31,30,31,30,31);
	if( ((d.year%4 == 0)&&(d.year%100 != 0) ) ||(d.year%400 == 0) ){
		daysinmonth[2] = 29;
	}
	d.last_day = daysinmonth[d.month];
	
	return d;
}



rea.types.strings = {};

rea.types.strings.getSafeHTML = function(sin){
	var s = sin;
	s = s.replace(/\>/g, "&gt;");
	s = s.replace(/\</g, "&lt;");
	
	s = s.replace(/\r\n/g, '&lt;br&gt;');
	s = s.replace(/\r/g, '&lt;br&gt;');
	s = s.replace(/\n/g, '&lt;br&gt;');
	s = s.replace(/\ /g, "&nbsp;");
	s = s.replace(/\t/g, "&nbsp; &nbsp; ");
	
	console.log("hmtl=" + s);
	return s;
}
rea.types.strings.getBasicHTML = function(sin){
	var s = sin;
	s = s.replace(/\>/g, "&gt;");
	s = s.replace(/\</g, "&lt;");
	
	s = s.replace(/\r\n/g, '<br>');
	s = s.replace(/\r/g, '<br>');
	s = s.replace(/\n/g, '<br>');
	s = s.replace(/\ /g, "&nbsp;");
	s = s.replace(/\t/g, "&nbsp; &nbsp; ");
	
	console.log("hmtl=" + s);
	return s;
}
rea.types.strings.htmlentities = function(s){
	return s.replace(/[\u00A0-\u9999<>\&]/gim, function(i) {return '&#' + i.charCodeAt(0) + ';';});
}

rea.types.strings.matchFormat = function(sin, format){
	
	this.format_map = {
		"*": {'n': 1, 'l': 9000, 'm': ["[A-Za-z0-9_\\.\\ \\-\\']+"] },
		"0": {'n': 1, 'l': 1, 'm': ["[0-9]"] },
		"#": {'n': 1, 'l': 9000, 'm': ["[0-9]+"] },
		"a": {'n': 1, 'l': 1, 'm': ["[A-Za-z0-9_\\.\\'\\ ]"]},
		".": {'n': 1, 'l': 1, 'm': ["\\."] },
		"+": {'n': 1, 'l': 1, 'm': ["\\-\\+"] },
		"@": {'n': 1, 'l': 1, 'm': ["\\@"] },
		" ": {'n': 1, 'l': 1, 'm': ["\\ "] },
		":": {'n': 1, 'l': 1, 'm': ["\\:"] },
		"/": {'n': 1, 'l': 1, 'm': ["\\/"] },
		"-": {'n': 1, 'l': 1, 'm': ["\\-"] },
		"_": {'n': 1, 'l': 1, 'm': ["\\_"] },
		"d": {'n': 1, 'l': 2, 'm': ["0[1-9]","1[0-9]", "2[0-9]", "3[0-1]"] },
		"j": {'n': 1, 'l': 2, 'm': ["[1-9]","1[0-9]", "2[0-9]", "3[0-1]"] },
		"m": {'n': 1, 'l': 2, 'm': ["0[1-9]","1[0-2]"] },
		"n": {'n': 1, 'l': 2, 'm': ["[1-9]","1[0-2]"] },
		"M": {'n': 1, 'l': 3, 'm': ["JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC","ENE","ABR","AGO","DIC"] },
		"g": {'n': 1, 'l': 2, 'm': ["[1-9]","1[0-2]"] },
		"G": {'n': 1, 'l': 2, 'm': ["[0-9]","1[0-9]","2[0-3]"] },
		"h": {'n': 1, 'l': 2, 'm': ["0[1-9]","1[0-2]"] },
		"H": {'n': 1, 'l': 2, 'm': ["0[0-9]","1[0-9]","2[0-3]"] },
		"i": {'n': 1, 'l': 2, 'm': ["[012345][0-9]"] },
		"s": {'n': 1, 'l': 2, 'm': ["[012345][0-9]"] },
		"Y": {'n': 1, 'l': 4, 'm': ["[123456789][0-9]{3}"] },
		"y": {'n': 1, 'l': 2, 'm': ["[0-9]{2}"] },
	};
	
	if(format.indexOf("[") !== 0) return {"match": 0, "string":""};
	var n = /\[[\<\>]*([A-Za-z0-9_\.\/\$\:\,\-\@\*\ \#\+]*)\]/.exec(format);
	if(!n) return {"match": 0, "string":""};
	
	var s = sin.replace("&nbsp;", " ");
	
	var matched = "";
	var mf = n[1];
	var l = s.length;
	var mc = 0;
	var sdir = 1;
	var p = 0;
			
	if(n[0].substr(1,1) == "<"){
		sdir=-1;
		p = l-1;
	}	
		
	for(var i=(sdir>0)?0:l-1; (sdir>0) ? i<=mf.length-1:i>=0; i+=sdir){
		var ch = mf.substr(i,1);
		
		//console.log("i=" + i + "::ch=" + ch);
		if(!this.format_map.hasOwnProperty(ch)) return {"match": 0, "string":""};
		var er = this.format_map[ch];
		var ok = false;
		for(var x=0; x<er.m.length; x++){
			//alert("eval[" + x + "]=" + er.m[x]);
			if((sdir>0) && (p > l)) break;
			if((sdir<0) && (p < 0)) break;

			var n = new RegExp(er.m[x]);
			var pi = (sdir>0) ? p: Math.max(p-er.l+1,0);
			var ml = Math.min(er.l, l-matched.length);
			var ns = s.substr(pi,ml);
			var nm = n.exec(ns);
			if(nm){
				ok = true;
				p += (sdir * nm[0].length);
				matched= (sdir>0) ?  matched + nm[0] : nm[0] + matched;
				break;
			}
		}
		
		//console.log("s=" + s + "::s[" + p + "-" + pi + "]=[" + ns + "]::mc=[" + mc + "]::er=[ch:" + ch + ",l:" + ml + "]::matched=[" + matched + "]");
		
		if(!ok) break;
		mc++;
	}
	//console.log("s=" + s + "::matched=" + matched + "::er=[ch:" + ch + ",l:" + ml + "]");
				
	var status = 0;
	if((matched == s) && (mc==mf.length) ){
		status = 2;
	}else if(mc>0){
		status = 1;
	}
				
	return {"match": status, "string":matched };
}


// callback( fn );
// callback( [obj, fn_name] )

//JavaScript Extensions


var rea_date = function(any){
	this.today = new Date();
	
	if (typeof any == 'string') {
		this.fromString(any);
	}else if(any){
		this.fromTarget(any);
	}
	
}
/**
 * Support to REASG templates
 *
 */

var ui_support = {
	view : {
		size : '',
		width: 0,
		height: 0,
		uagent:'',
		attr: {},
	},
	opsViewSizes : [
		['lg', "$width >= 1280"],
		['md', "$width >= 768"],
		['xs', "$width < 460"],
		['sm', "$width < 768"],
	],
	opsViewDeviceAttr :[
		['webkit', ["webkit"]],
		['android', ["android"]],
		['safari', ["safari"]],
		['chrome', ["chrome"]],
		['ios', ["iphone","ipad", "ipod"] ],
		['windows', ["iemobile"] ],
		['mobile', ["iphone","ipad", "ipod", "android", "iemobile"] ],
	],
	copyClasses: function(o,t, classes){
		for(var i in classes){
			if(o.hasClass(classes[i])) t.addClass(classes[i]);
		}
	},
	copyAttr: function(o,t, attrs){
		for(var i in attrs){
			if(o.attr(attrs[i])) t.attr(attrs[i], o.attr(attrs[i]));
		}
		
	},
	applyStandardRowSizeAttr: function(o, t){
		this.copyAttr(o,t,['xs-min-width', 'sm-min-width', 'md-min-width', 'lg-min-width'] );
		
		if(o.attr('min-width')){
			t.css({"min-width": o.attr('min-width')});
		}
	},
	createNotification : function(message, type) {
		var html = '<div class="alert alert-' + type + ' alert-dismissable page-alert">';    
		html += '<button type="button" class="close"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>';
		html += message;
		html += '</div>';    
		$(html).hide().prependTo('#noty-holder').slideDown();
	},
	init : function(){
		
		this.view.uagent = navigator.userAgent.toLowerCase();
		
		for( var i in this.opsViewDeviceAttr){
			var e = this.opsViewDeviceAttr[i];
			//var m = e[1];
			var ok = false;
			e[1].forEach(function(m){
				ok = ok || (ui_support.view.uagent.search(m) > -1);
			});
			this.view.attr[e[0]] = ok;
		}
		
		
		$(document).on("click", '.page-alert .close', function(e) {
			e.preventDefault();
			$(this).closest('.alert.page-alert').slideUp();
		});
		
		$("body").on('click touchend', '.input-group-addon.ui_cal_btn', function(e){
			e.stopPropagation();
			var o = $(e.target);
			if( !o.hasClass(".ui_cal_btn") ){
				o = o.closest(".ui_cal_btn");
			}
			
			var t = o.prev();
			if((t.length > 0) && !t.hasClass("ui_date") ){
				t = o.next();
			}
			if((t.length > 0) && !t.hasClass("ui_date") ){
				if( o.data("field") ){
					t = o.data("field");
					if(typeof t == "string") t = $("input[name='" + o.data("field") + "']");
				}
			}
			
			if(!t || (t.length <= 0)) return;
			ui_support.calendarPopup(t);
		});
		$(window).bind("load resize", function() {
			topOffset = 50;
			ui_support.view.width = (this.window.innerWidth > 0) ? this.window.innerWidth : this.screen.width;
			
			var changed = false;
			var size = ui_support.view.size;
			
			for( var i in ui_support.opsViewSizes){
				var e = ui_support.opsViewSizes[i];
				var $width = ui_support.view.width;
				var ok = false;
				
				
				eval("{ ok=(" + e[1] + "); }");
				if(!ok) continue;
				if(size != e[0]) changed = true;
				size = e[0];
				break;
			}
			
			if(changed){
				$("body").removeClass(ui_support.view.size);
				$("body").addClass(size);
				
				ui_support.view.size = size;
				rea_controller.dispatchEvent("view-size-changed", size);
			}
			
			if (ui_support.view.width < 768) {
				
				$('div.navbar-collapse').addClass('collapse');
				$('.navbar-top-links.navbar-collapse').addClass('collapse');
				topOffset = 100; // 2-row-menu
			} else {
				
				$('div.navbar-collapse').removeClass('collapse');
				$('.navbar-top-links.navbar-collapse').removeClass('collapse');
			}
	
			var height = ((this.window.innerHeight > 0) ? this.window.innerHeight : this.screen.height) - 1;
			height = height - topOffset;
			ui_support.view.height = height;
			
			//if (height < 1) height = 1;
			//if (height > topOffset) {
				//$("#page-wrapper").css("min-height", (height) + "px");
			//}

			
		});
	}
	
}


ui_support.CreateMasked = function(e) {
	
	e.attr("contenteditable", "true");
	e.addClass("edit-area");
	e.data("matching", false);
	e.data("buffer", "");
	
	var $this = {"txt": new rte(e), "selStart": 0, "matching":false, "buffer":""};
	
	e.on('blur', function(event) {
		event.stopPropagation();
		event.preventDefault();
		
		var t = $(this);
		var s = t.html();
		var r = new RegExp(t.data("mask"));
		if(!r.exec(s)){
			//t.focus();
			return;
		}
		
		var ev = new Event("change", {"bubbles":false, "cancelable":false, "target": this});
		document.dispatchEvent(ev);
		
		$this.txt.clearSelection();
	});
	e.on('focus', function(event) {
		var t = $(this);
		if(t.hasClass("disabled")){
			event.stopImmediatePropagation();
			event.preventDefault();
			
			t.blur();
		}
	});
	e.on('keydown', function(event) {
		var t = $(this);
		if($this.matching || t.hasClass("disabled")){
			event.stopImmediatePropagation();
			event.preventDefault();
			return;
		}
		
		if (event.which == 27) {
			t.trigger('blur');
		} else if ((event.which == 10) || (event.which == 13)) {
			event.stopImmediatePropagation();
			event.preventDefault();
		}
		
		$this.txt.getSelection();
		
		if($this.txt.selection && ($this.txt.selection.rangeCount > 0) ){
			var range = $this.txt.selection.getRangeAt(0);
			$this.selStart = range.endOffset;
			
			var s = t.html();
			if($this.selStart == s.length){
				$this.selStart = 0;
			}
		}
	});
	e.on('keyup', function(event) {
		var t = $(this);
		var s = t.html();
		
		if(s.length == 0){
			t.data("buffer","");
			return;
		}
		
		var ignore = [37,38,39,40,8];
		if( ignore.indexOf(event.which) >=0 ){
			if( event.which == 8 ){
				$this.buffer = s;
			}
		
			if($this.txt.selection && ($this.txt.selection.rangeCount > 0) ){
				var range = $this.txt.selection.getRangeAt(0);
				$this.selStart = range.endOffset;
			}
			return;
		}
		
		$this.matching = true;
		var r = rea.types.strings.matchFormat(s, t.data("mask"));
		if(r.match == 2){
			$this.matching = false;
			$this.buffer = s;
			var ev = new Event("change", {"bubbles":false, "cancelable":false, "target": this});
			document.dispatchEvent(ev);
			$this.txt.getSelection();
			return;
		}
		
		if(r.match == 1){
			s = r.string;
			s += $this.buffer.substr(s.length);
			$this.buffer = s;
		}else{
			s = $this.buffer;
		}
			
		t.html(s);
			
		if($this.selStart > 0){
			
			console.log("anchor=" + $this.selStart);
			if($this.selStart<=s.length){
				$this.txt.setSelectionPos($this.selStart,0);
			}else{
				$this.txt.setSelectionPos(s.length,0);
			}	
		}else{
			$this.txt.setSelectionPos(s.length,0);
		}
		
		
		var ev = new Event("change", {"bubbles":false, "cancelable":false, "target": this});
		document.dispatchEvent(ev);

		$this.matching = false;
		return;
	});
}

ui_support.calendarPopup = function(o, options){
	
	if (typeof o == 'string') {
		if(o == 'close'){
			if (ui_support.calendar_popup == null) return;
			ui_support.calendar_popup.uiPopup( "close");
		}
		
		return;
	}
	
	var ops = $.extend({
		'target' : null,
		'center' : false,
		'valueBuild': function(d){ return d.month  + "/" + d.day + "/" + d.year; },
		'valueSet': null,
		'valueGet': null,
	}, options );
	
	var $this = o;
	
	if(!ops.valueGet){
		ops.valueGet = function(){
			return $this.val();	
		}
	}
	if(!ops.valueSet){
		ops.valueSet = function(v){
			return $this.val(v);	
		}
	}
	

	if(!ui_support.hasOwnProperty("calendar_popup") || ui_support.calendar_popup == null) {
		var s = "<div id='ui-calendar-popup' class='dialog'>";
		s = s + "</div>";
		
		ui_support.calendar_popup = $(s);
		$('body').prepend(ui_support.calendar_popup);
		
		ui_support.calendar_popup.on('click touchend', "td.day:not([data-date='']), i[data-date]", function(e){
			e.stopImmediatePropagation();
			e.preventDefault();
			
			var o = $(e.target);
			var dt =  rea.types.date.create(o);
			
			if (!o.hasClass('day')) { //is a month or year
				var s = ui_support.calendarBuildForDate(dt);
				ui_support.calendar_popup.html(s);
				return;
			}
			var s = dt.as_string;
			var fnVal = ui_support.calendar_popup.ops.valueBuild;
			if ( typeof fnVal == 'function') {
				s = fnVal(dt);
			}
			
			var fnSet = ui_support.calendar_popup.ops.valueSet;
			
			if ( typeof fnSet == 'function') {
				fnSet(s);
			}
			
			ui_support.calendar_popup.removeClass("in");
		});
		
		
	}

	
	var dt =  rea.types.date.create(ops.valueGet(o));
	o.data('date', dt.toHumanString());
	
	var s = ui_support.calendarBuildForDate(dt);
	ui_support.calendar_popup.html(s);
	
	ui_support.calendar_popup.ops = ops;
	ui_support.calendar_popup.uiPopup({target:o});
}

ui_support.calendarOptions = {
		strs : {},
		strings : {
			"en" : {
				'months' : ['','January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
				'th_days' : '<tr><th>Su</th><th>M</th><th>Tu</th><th>W</th><th>Th</th><th>F</th><th>Sa</th></tr>',
				'today' : 'Today',
				'nm' : 'Next Month',
				'pm' : 'Previous Month'
			},
			"es" : {
				'months' : ['','Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'], 
				'th_days' : '<tr><th>D</th><th>L</th><th>M</th><th>W</th><th>J</th><th>V</th><th>S</th></tr>',
				'today' : 'Hoy',
				'nm' : 'Proximo Mes',
				'pm' : 'Mes Anterior'
			}
		}
}

ui_support.calendarBuildForDate = function(dt){
	var html = '', th='' ,th_days='';

	var sd = dt.fow;
	var strs = ui_support.calendarOptions.strings[ rea.lang ];
	
	d = 0;
	var lnk ='';
	for(var col=0; col<=5; col++){
		html += "<tr>";
		for(var row=0; row<=6; row++){
			if((row >= sd) && (d < dt.last_day)){ //first day
				d++;
				sd = 0;
				//console.log('d=' + d + ' row=' + row + " col= " + col + ' sd=' + sd);
				lnk = " data-date='" + dt.month + '/' + d + '/' + dt.year + "'"; 
				if(d == dt.day){
					html += "<td class='day active' " + lnk + ">";
				}else if((dt.year == dt.today.getFullYear()) && (dt.m == (dt.today.getMonth())) && (d == dt.today.getDate())){
					html += "<td class='day today' " + lnk + ">";
				}else{
					html += "<td class='day' " + lnk + ">";
				}
				html += d + "</td>";
			}else {
				html += "<td class='empty'>" + "</td>";
			}
		}
		html += "</tr>";
		if(d >= dt.last_day) break;
	}
	
	var s = '';
	var pm = rea.types.date.dateToHumanString(dt.prev_month);
	var nm = rea.types.date.dateToHumanString(dt.next_month);
		
	th = "<tr><th class='day_prev'><i data-date='" + pm + "' class='fa fa-angle-left'></i></th><th class='day_month' colspan='5'>" + strs.months[dt.month] + ", " + dt.year + "</th><th class='day_next'><i data-date='" + nm + "' class='fa fa-angle-right'></i></th></tr>";
	
	s += "<table border='0' cellspacing='1' id='cal_month'>";
	s += "<thead>" + th + strs.th_days + "</thead><tbody>";
	s += html + "</tbody></table>";
	s += "</div>";
	
	return s;
}



$(document).ready(function(){
	ui_support.init();
});